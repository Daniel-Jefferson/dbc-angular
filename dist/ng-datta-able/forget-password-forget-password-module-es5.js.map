{"version":3,"sources":["src/app/demo/pages/authentication/forget-password/forget-password.component.html","src/app/demo/pages/authentication/forget-password/forget-password-routing.module.ts","src/app/demo/pages/authentication/forget-password/forget-password.component.scss","src/app/demo/pages/authentication/forget-password/forget-password.component.ts","src/app/demo/pages/authentication/forget-password/forget-password.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"auth-wrapper\\\">\\n  <ngx-spinner \\n      [name]=\\\"'spinner1'\\\" \\n      [fullScreen]=\\\"true\\\" \\n      type=\\\"ball-clip-rotate-multiple\\\" \\n      size=\\\"medium\\\"\\n  >\\n  </ngx-spinner>\\n  <div class=\\\"auth-content\\\">\\n    <!-- <div class=\\\"auth-bg\\\">\\n      <span class=\\\"r\\\"></span>\\n      <span class=\\\"r s\\\"></span>\\n      <span class=\\\"r s\\\"></span>\\n      <span class=\\\"r\\\"></span>\\n    </div> -->\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body text-center\\\">\\n        <div class=\\\"mb-4\\\">\\n          <!-- <i class=\\\"feather icon-unlock auth-icon\\\"></i> -->\\n           <img id=\\\"logo-image\\\" class=\\\"img-fluid img-rounded\\\" [src]=\\\"'assets/images/buds-logo.png'\\\" height=\\\"70\\\" width=\\\"70\\\" />\\n        </div>\\n        <h3 class=\\\"mb-4\\\">Reset Password</h3>\\n        <form [formGroup]=\\\"resetPasswordForm\\\" (ngSubmit)=\\\"onResetSubmit(resetPasswordForm)\\\" #myform=\\\"ngForm\\\" method=\\\"POST\\\">\\n          <div class=\\\"input-group mb-2\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n          </div>\\n          <div class=\\\"input-group mb-3 error-div\\\">\\n            <small *ngIf=\\\"resetPasswordForm.get('email').hasError('required') && myform.submitted\\\">Email Required</small>\\n            <small *ngIf=\\\"!resetPasswordForm.get('email').hasError('required') && resetPasswordForm.get('email').status === 'INVALID' && myform.submitted\\\">Enter a valid email address</small>\\n          </div>\\n\\n         \\n          <button class=\\\"btn btn-primary mb-4\\\">Submit</button>\\n        </form>\\n        \\n        <p class=\\\"mb-2 text-muted\\\">Do you already have account? <a [routerLink]=\\\"['/auth/signin']\\\">Sign in</a></p>\\n        <p class=\\\"mb-0 text-muted\\\">Donâ€™t have an account? <a [routerLink]=\\\"['/auth/signup']\\\">Sign up</a></p>\\n      \\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ForgetPasswordComponent} from './forget-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgetPasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgetPasswordRoutingModule { }\n","export default \".error-div {\\n  color: red;\\n  background-color: white !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94MjMvRG9jdW1lbnRzL0dpdEh1Yi9kYmMtYnVkc2JhbmstYW5ndWxhci9zcmMvYXBwL2RlbW8vcGFnZXMvYXV0aGVudGljYXRpb24vZm9yZ2V0LXBhc3N3b3JkL2ZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVU7RUFDVixrQ0FBa0MsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RlbW8vcGFnZXMvYXV0aGVudGljYXRpb24vZm9yZ2V0LXBhc3N3b3JkL2ZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1kaXYge1xuICAgIGNvbG9yOiByZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm ,FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.scss']\n})\nexport class ForgetPasswordComponent implements OnInit {\n\n\nresetPasswordForm = new FormGroup({\n    email: new FormControl('')\n  })\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private router: Router,\n    private spinner: NgxSpinnerService\n    ) { }\n\n  ngOnInit() {\n  \tthis.resetPasswordForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  get email(){\n    return this.resetPasswordForm.get('email');\n  }\n\n  onResetSubmit() {\n    if (!this.resetPasswordForm.invalid){\n      this.showSpinner('spinner1');\n      const email = this.resetPasswordForm.get('email').value;\n      console.log(email);\n      this.auth.forgetpassword(email).then(forgetResponse => { \n      \tconsole.log(forgetResponse);\n        // if (loginResponse['status'] === 200){\n        //   if (loginResponse['data'].length > 0){\n        //     this.auth.setUserInfo(loginResponse['data']);\n        //     this.router.navigateByUrl('dashboard/default');\n        //   }\n        // }else{\n        //   this.setAuthenticationError(loginResponse['message']);\n        // }\n\n        if (forgetResponse['status'] === 200){\n          this.hideSpinner('spinner1');\n          swal.fire('Success', \"Reset Email sent successfully. Please check you email\", 'success');\n          this.router.navigateByUrl('auth/signin');\n        }else{\n          this.hideSpinner('spinner1');\n          swal.fire('Error', `${forgetResponse['message']}`, 'error');\n        }\n      })\n    }\n  }\n\n  showSpinner(name: string) { \n    this.spinner.show(name);\n  }\n\n  hideSpinner(name: string) {\n    this.spinner.hide(name);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { ForgetPasswordRoutingModule } from './forget-password-routing.module';\nimport { ForgetPasswordComponent } from './forget-password.component';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n imports: [\n    CommonModule,\n    ForgetPasswordRoutingModule,\n    FormsModule, \n    ReactiveFormsModule,\n    SweetAlert2Module,\n    NgxSpinnerModule\n  ],\n  declarations: [ForgetPasswordComponent]\n})\nexport class ForgetPasswordModule { }\n"],"sourceRoot":"webpack:///","file":"forget-password-forget-password-module-es5.js"}