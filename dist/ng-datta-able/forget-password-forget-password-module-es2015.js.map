{"version":3,"sources":["./src/app/demo/pages/authentication/forget-password/forget-password.component.html","./src/app/demo/pages/authentication/forget-password/forget-password-routing.module.ts","./src/app/demo/pages/authentication/forget-password/forget-password.component.scss","./src/app/demo/pages/authentication/forget-password/forget-password.component.ts","./src/app/demo/pages/authentication/forget-password/forget-password.module.ts"],"names":[],"mappings":"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","file":"forget-password-forget-password-module-es2015.js","sourcesContent":["export default \"<div class=\\\"auth-wrapper\\\">\\n  <ngx-spinner \\n      [name]=\\\"'spinner1'\\\" \\n      [fullScreen]=\\\"true\\\" \\n      type=\\\"ball-clip-rotate-multiple\\\" \\n      size=\\\"medium\\\"\\n  >\\n  </ngx-spinner>\\n  <div class=\\\"auth-content\\\">\\n    <!-- <div class=\\\"auth-bg\\\">\\n      <span class=\\\"r\\\"></span>\\n      <span class=\\\"r s\\\"></span>\\n      <span class=\\\"r s\\\"></span>\\n      <span class=\\\"r\\\"></span>\\n    </div> -->\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body text-center\\\">\\n        <div class=\\\"mb-4\\\">\\n          <!-- <i class=\\\"feather icon-unlock auth-icon\\\"></i> -->\\n           <img id=\\\"logo-image\\\" class=\\\"img-fluid img-rounded\\\" [src]=\\\"'assets/images/buds-logo.png'\\\" height=\\\"70\\\" width=\\\"70\\\" />\\n        </div>\\n        <h3 class=\\\"mb-4\\\">Reset Password</h3>\\n        <form [formGroup]=\\\"resetPasswordForm\\\" (ngSubmit)=\\\"onResetSubmit(resetPasswordForm)\\\" #myform=\\\"ngForm\\\" method=\\\"POST\\\">\\n          <div class=\\\"input-group mb-2\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n          </div>\\n          <div class=\\\"input-group mb-3 error-div\\\">\\n            <small *ngIf=\\\"resetPasswordForm.get('email').hasError('required') && myform.submitted\\\">Email Required</small>\\n            <small *ngIf=\\\"!resetPasswordForm.get('email').hasError('required') && resetPasswordForm.get('email').status === 'INVALID' && myform.submitted\\\">Enter a valid email address</small>\\n          </div>\\n\\n         \\n          <button class=\\\"btn btn-primary mb-4\\\">Submit</button>\\n        </form>\\n        \\n        <p class=\\\"mb-2 text-muted\\\">Do you already have account? <a [routerLink]=\\\"['/auth/signin']\\\">Sign in</a></p>\\n        <p class=\\\"mb-0 text-muted\\\">Donâ€™t have an account? <a [routerLink]=\\\"['/auth/signup']\\\">Sign up</a></p>\\n      \\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ForgetPasswordComponent} from './forget-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgetPasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgetPasswordRoutingModule { }\n","export default \".error-div {\\n  color: red;\\n  background-color: white !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94MjMvRG9jdW1lbnRzL0dpdEh1Yi9kYmMtYnVkc2JhbmstYW5ndWxhci9zcmMvYXBwL2RlbW8vcGFnZXMvYXV0aGVudGljYXRpb24vZm9yZ2V0LXBhc3N3b3JkL2ZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVU7RUFDVixrQ0FBa0MsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RlbW8vcGFnZXMvYXV0aGVudGljYXRpb24vZm9yZ2V0LXBhc3N3b3JkL2ZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1kaXYge1xuICAgIGNvbG9yOiByZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm ,FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.scss']\n})\nexport class ForgetPasswordComponent implements OnInit {\n\n\nresetPasswordForm = new FormGroup({\n    email: new FormControl('')\n  })\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private router: Router,\n    private spinner: NgxSpinnerService\n    ) { }\n\n  ngOnInit() {\n  \tthis.resetPasswordForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  get email(){\n    return this.resetPasswordForm.get('email');\n  }\n\n  onResetSubmit() {\n    if (!this.resetPasswordForm.invalid){\n      this.showSpinner('spinner1');\n      const email = this.resetPasswordForm.get('email').value;\n      console.log(email);\n      this.auth.forgetpassword(email).then(forgetResponse => { \n      \tconsole.log(forgetResponse);\n        // if (loginResponse['status'] === 200){\n        //   if (loginResponse['data'].length > 0){\n        //     this.auth.setUserInfo(loginResponse['data']);\n        //     this.router.navigateByUrl('dashboard/default');\n        //   }\n        // }else{\n        //   this.setAuthenticationError(loginResponse['message']);\n        // }\n\n        if (forgetResponse['status'] === 200){\n          this.hideSpinner('spinner1');\n          swal.fire('Success', \"Reset Email sent successfully. Please check you email\", 'success');\n          this.router.navigateByUrl('auth/signin');\n        }else{\n          this.hideSpinner('spinner1');\n          swal.fire('Error', `${forgetResponse['message']}`, 'error');\n        }\n      })\n    }\n  }\n\n  showSpinner(name: string) { \n    this.spinner.show(name);\n  }\n\n  hideSpinner(name: string) {\n    this.spinner.hide(name);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { ForgetPasswordRoutingModule } from './forget-password-routing.module';\nimport { ForgetPasswordComponent } from './forget-password.component';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n imports: [\n    CommonModule,\n    ForgetPasswordRoutingModule,\n    FormsModule, \n    ReactiveFormsModule,\n    SweetAlert2Module,\n    NgxSpinnerModule\n  ],\n  declarations: [ForgetPasswordComponent]\n})\nexport class ForgetPasswordModule { }\n"],"sourceRoot":"webpack:///"}