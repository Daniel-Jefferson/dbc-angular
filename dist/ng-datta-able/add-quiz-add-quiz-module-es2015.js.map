{"version":3,"sources":["./src/app/demo/quizes/add-quiz/add-quiz.component.html","./src/app/demo/quizes/add-quiz/add-quiz-routing.module.ts","./src/app/demo/quizes/add-quiz/add-quiz.component.scss","./src/app/demo/quizes/add-quiz/add-quiz.component.ts","./src/app/demo/quizes/add-quiz/add-quiz.module.ts","./src/app/services/dispensaries/dispensaries.service.ts"],"names":[],"mappings":"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","file":"add-quiz-add-quiz-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <app-card cardTitle=\\\"Add Questions\\\" [options]=\\\"false\\\">\\n                <ngx-spinner \\n                    [name]=\\\"'spinner1'\\\" \\n                    [fullScreen]=\\\"true\\\" \\n                    type=\\\"ball-clip-rotate-multiple\\\" \\n                    size=\\\"medium\\\"\\n                >\\n                </ngx-spinner>\\n            <form [formGroup]=\\\"addQuizForm\\\" (ngSubmit) = \\\"onQuizSUbmit(addQuizForm)\\\" #myform=\\\"ngForm\\\" method=\\\"POST\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">   \\n                        <div class=\\\"form-group\\\">\\n                            <label>Uplaod File</label>\\n                            <input type=\\\"file\\\" formControlName=\\\"file\\\" class=\\\"form-control\\\" (click)=\\\"emptyErrorList()\\\" (change)=\\\"fileProgress($event)\\\" ng2FileSelect [uploader]=\\\"uploader\\\" accept=\\\"application/json\\\">\\n                            <span style=\\\"color: red\\\">*Please upload a json formated file</span>\\n                            <div class=\\\"mb-3 error-div mt-3\\\">\\n                                <small *ngIf=\\\"addQuizForm.get('file').hasError('required') && myform.submitted\\\">Please select a JSON file to upload</small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <a href=\\\"trivia_sample.json\\\" download>Downlaod the sample file?</a>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"error-container\\\" *ngIf=\\\"errorDivContent.length > 0\\\">\\n                            <p *ngFor=\\\"let obj of errorDivContent\\\">\\n                                {{obj | json}}\\n                            </p>\\n                        </div>\\n                    </div>\\n                    \\n                </div>\\n                \\n                <button \\n                    type=\\\"submit\\\" \\n                    class=\\\"btn btn-primary\\\" \\n                    [disabled]=\\\"errorDivContent.length > 0\\\"\\n                >\\n                    Submit\\n                </button>\\n            </form>\\n            </app-card>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddQuizComponent } from './add-quiz.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddQuizComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddQuizRoutingModule { }\r\n","export default \".error-container {\\n  background: rgba(255, 0, 0, 0.2);\\n  color: black;\\n  border-radius: 2%;\\n  padding: 3%; }\\n\\n.error-container p {\\n  color: black; }\\n\\n.error-div {\\n  color: red;\\n  background-color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94MjMvRG9jdW1lbnRzL0dpdEh1Yi9kYmMtYnVkc2JhbmstYW5ndWxhci9zcmMvYXBwL2RlbW8vcXVpemVzL2FkZC1xdWl6L2FkZC1xdWl6LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0NBQWdDO0VBQ2hDLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsV0FBVyxFQUFBOztBQUdmO0VBQ0ksWUFBWSxFQUFBOztBQUdoQjtFQUNJLFVBQVU7RUFDVix1QkFBdUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RlbW8vcXVpemVzL2FkZC1xdWl6L2FkZC1xdWl6LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLWNvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMCwgMCwgMC4yKTtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDIlO1xyXG4gICAgcGFkZGluZzogMyU7XHJcbn1cclxuXHJcbi5lcnJvci1jb250YWluZXIgcCB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5lcnJvci1kaXYge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from '../../../../environments/environment';\nimport { QuizService } from '../../../services/quiz/quiz.service';\nimport { DispensariesService } from '../../../services/dispensaries/dispensaries.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-quiz',\n  templateUrl: './add-quiz.component.html',\n  styleUrls: ['./add-quiz.component.scss']\n})\nexport class AddQuizComponent implements OnInit {\n  public errorDivContent    = [];\n  public fileData           : File    = null;\n  public previewUrl         : any     = null;\n  public fileUploadProgress : string  = null;\n  public uploadedFilePath   : string  = null;\n  public uploadAPI          = `${environment.apiUrl}/quiz/upload`;\n\n  public uploader: FileUploader = new FileUploader({\n    'url'           : this.uploadAPI,\n     itemAlias      : 'file'\n  });\n\n  public quizDataToUpload   = [];\n\n  addQuizForm = new FormGroup({\n    dispensary    : new FormControl(''),\n    file          : new FormControl('')\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dispensaryService: DispensariesService,\n    private quizService: QuizService,\n    private spinner: NgxSpinnerService\n    ) { }\n\n  ngOnInit() {\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      console.log(item.file.name);\n    };\n\n    this.addQuizForm = this.formBuilder.group({\n      file          : ['', [Validators.required]],\n    });  \n  \n  }\n\n  fileProgress(fileInput: any) {\n    this.quizDataToUpload = [];\n    this.fileData = <File>fileInput.target.files[0];\n    const fileReader = new FileReader();\n    let errorList = [];\n    fileReader.readAsText(this.fileData, \"UTF-8\");\n    fileReader.onload = () => { \n      var finalResult = JSON.parse(`${fileReader.result}`);\n      \n      finalResult.forEach( element => { \n        if (element.hasOwnProperty(\"question_text\") && element.hasOwnProperty(\"answers\")){ \n          let answers = element[\"answers\"][0];\n          if (answers.hasOwnProperty(\"answer_a\") && answers.hasOwnProperty(\"answer_b\") && answers.hasOwnProperty(\"answer_c\") && answers.hasOwnProperty(\"answer_d\") && answers.hasOwnProperty(\"correct_answer\")){\n            this.quizDataToUpload.push(element);\n          }else{\n            errorList.push(element);\n          }\n        }else{\n          errorList.push(element);\n        }\n      });\n      this.errorDivContent = errorList;\n    }\n    fileReader.onerror = (error) => {\n      errorList.push(error);\n    }\n  }\n\n  emptyErrorList(){\n    if (this.errorDivContent.length > 0){ \n      this.errorDivContent = [];\n    }\n  }\n\n  get file(){\n    return this.addQuizForm.get('file');\n  }\n\n  onQuizSUbmit(){\n\n    if (!this.addQuizForm.invalid){\n      this.showSpinner('spinner1')\n      var data = {};\n      data['data'] = this.quizDataToUpload; console.log(data)\n      \n      this.quizService.uploadQuiz(data).then( response => {\n        if (response['status'] === 200){\n          this.hideSpinner('spinner1');\n          swal.fire(\n            'Success',\n            'Quiz importes successfully',\n            'success'\n          );\n        }else{\n          swal.fire(\n            'Error',\n            'Internal Server Error',\n            'error'\n          )\n        }\n      })\n    }\n  }\n\n  showSpinner(name: string) { \n    this.spinner.show(name);\n  }\n\n  hideSpinner(name: string) {\n    this.spinner.hide(name);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddQuizComponent } from './add-quiz.component';\nimport { AddQuizRoutingModule } from './add-quiz-routing.module';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { SharedModule } from '../../../theme/shared/shared.module';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { SelectDropDownModule } from 'ngx-select-dropdown';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [AddQuizComponent],\n  imports: [\n    CommonModule,\n    AddQuizRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    SweetAlert2Module,\n    FileUploadModule,\n    SelectDropDownModule,\n    NgxSpinnerModule\n  ]\n})\nexport class AddQuizModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DispensariesService {\n\n  constructor(private http: HttpClient) { }\n\n  public addDispensary(data: any){\n    return this.http.post(`${environment.apiUrl}/dispensary/add`, data).toPromise();\n  }\n\n  public getActiveDispensaries(pageNumber: any, pageSize: any, userID: any){\n    return this.http.get(`${environment.apiUrl}/dispensary/all?page=${pageNumber}&size=${pageSize}&userID=${userID}`).toPromise();\n  }\n\n  public disableDispensary(data: any){\n    return this.http.post(`${environment.apiUrl}/dispensary/disable`, data).toPromise();\n  }\n\n  public getDisabledDispensaries(pageNumber: any, pageSize: any, userID: any){\n    return this.http.get(`${environment.apiUrl}/dispensary/disabled/all?page=${pageNumber}&size=${pageSize}&userID=${userID}`).toPromise();\n  }\n\n  public activateDispensary(data: any){\n    return this.http.post(`${environment.apiUrl}/dispensary/activate`, data).toPromise();\n  }\n\n  public getDispensaryById(dispensaryId: any){\n    return this.http.get(`${environment.apiUrl}/dispensary/${dispensaryId}`).toPromise();\n  }\n\n  public updateDispensary(data: any){\n    return this.http.post(`${environment.apiUrl}/dispensary/update`, data).toPromise();\n  }\n\n  public getActiveDispensariesWithoutPagination(){\n    return this.http.get(`${environment.apiUrl}/dispensary/active/all/without-pagination`).toPromise();\n  }\n\n  public getAdminDispensary(){\n    let admin = JSON.parse(localStorage.getItem('userInfo'));\n    return this.http.get(`${environment.apiUrl}/dispensary/admin/${admin.id}`).toPromise();\n  }\n}\n"],"sourceRoot":"webpack:///"}