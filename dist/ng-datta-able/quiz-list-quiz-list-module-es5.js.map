{"version":3,"sources":["src/app/demo/quizes/quiz-list/quiz-list.component.html","src/app/demo/quizes/quiz-list/quiz-list-routing.module.ts","src/app/demo/quizes/quiz-list/quiz-list.component.scss","src/app/demo/quizes/quiz-list/quiz-list.component.ts","src/app/demo/quizes/quiz-list/quiz-list.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n      <app-card cardTitle=\\\"Questions List\\\" [options]=\\\"false\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-hover\\\">\\n            <thead>\\n            <tr>\\n              <th>Group</th>\\n              <th>Uploaded On</th>\\n              \\n              <th class=\\\"text-right\\\">Actions</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let quiz of this.quizes\\\">\\n              <td>Group {{ quiz.group_id }}</td>\\n              <td>{{ quiz.created_at }}</td>\\n              <td class=\\\"text-right\\\">\\n                <a \\n                  (click)=\\\"showWarningPopup(quiz.group_id)\\\"\\n                >\\n                  <i class=\\\"feather icon-trash text-c-green m-r-10\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Disable User\\\"></i></a>\\n              </td>\\n            </tr>\\n            </tbody>\\n          </table>\\n          <div class=\\\"mt-3 text-right\\\">\\n            <a (click)=\\\"loadPrevResults()\\\" class=\\\"btn btn-primary\\\" style=\\\"color: white; padding: 5px;\\\">Prev</a>\\n            <a (click)=\\\"loadNextResults()\\\" class=\\\"btn btn-primary\\\" style=\\\"color: white; padding: 5px;\\\">Next</a>\\n          </div>\\n        </div>\\n      </app-card>\\n    </div>\\n  </div>\\n  \"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { QuizListComponent } from './quiz-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QuizListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class QuizListRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vcXVpemVzL3F1aXotbGlzdC9xdWl6LWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { QuizService } from '../../../services/quiz/quiz.service';\nimport { DispensariesService } from '../../../services/dispensaries/dispensaries.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-quiz-list',\n  templateUrl: './quiz-list.component.html',\n  styleUrls: ['./quiz-list.component.scss']\n})\nexport class QuizListComponent implements OnInit {\n\n  public quizes = [];\n  public pageSize: number = 10;\n  public pageNumber: number = 0;\n\n  constructor(\n    private quizService: QuizService,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit() {\n    this.getAvailableQuiz(this.pageNumber, this.pageSize);\n  }\n\n  getAvailableQuiz(pageNumber: number, pageSize: number){ console.log(pageNumber); console.log(pageSize);\n    this.quizService.getAllQuiz(pageNumber, pageSize).then( response => { console.log(response);\n      if (response['status'] === 200){\n        var tempArray = [];\n        response['data'].forEach( element => {\n          var data = {\n            'group_id': element.group_id,\n            'created_at': this.formatDate(element.created_at)\n          }\n          tempArray.push(data);\n          this.quizes = tempArray;\n        });\n      }else{\n        if (this.quizes.length )\n        if (this.pageNumber !== 0){\n          this.pageNumber = this.pageNumber - 10;\n        }else{\n          this.quizes = [];\n        }\n        // swal.fire({\n        //   icon: \"error\",\n        //   title: \"error\",\n        //   text: \"No more records available\"\n        // })\n      }\n      \n      console.log(this.quizes);\n    })\n  }\n\n  formatDate(date: any) {\n    var newDate = new Date(date);\n    let month = \"\" + (newDate.getMonth() + 1);\n    let day =   \"\" + newDate.getDate();\n    let year = newDate.getFullYear(); \n    \n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n  \n    return [year, month, day].join(\"-\");\n  }\n\n  showWarningPopup(quizId: any){\n    swal.fire({\n      icon: \"warning\",\n      title: \"Warning\",\n      text: \"Are you sure you want to delete these question?\",\n      showCancelButton: true,\n    }).then((response)=>{\n      if (response.value){\n        this.deleteQuiz(quizId);\n      }\n    });\n  }\n\n  deleteQuiz(quizId){\n    var data = {\n      'quiz_id': quizId\n    }\n    this.quizService.deleteQuiz(data).then( response => {\n      if (response['status'] === 200){\n        swal.fire({\n          icon: \"success\",\n          title: \"Success\",\n          text: \"Questions Deleted Successfully\",\n        })\n      }else{\n        swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"Internal Server Error\"\n        })\n      }\n      this.getAvailableQuiz(this.pageNumber, this.pageSize);\n    })\n  }\n\n  loadNextResults(){\n    var pageNumber = this.pageNumber + 10; \n    this.pageNumber = pageNumber;  \n    this.getAvailableQuiz(pageNumber, this.pageSize);\n  }\n\n  loadPrevResults(){ \n    if (this.pageNumber !== 0){\n      var pageNumber = this.pageNumber - 10;    \n      this.pageNumber = pageNumber;\n      if (pageNumber >= 0 && this.pageSize >= 0){\n        this.getAvailableQuiz(pageNumber, this.pageSize);\n      }\n    }else{\n      swal.fire({\n        icon: \"error\",\n        title: \"error\",\n        text: \"No more records available\"\n      })\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuizListComponent } from './quiz-list.component';\nimport { QuizListRoutingModule } from './quiz-list-routing.module';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { SharedModule } from '../../../theme/shared/shared.module';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { SelectDropDownModule } from 'ngx-select-dropdown';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [QuizListComponent],\n  imports: [\n    CommonModule,\n    QuizListRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    SweetAlert2Module,\n    SelectDropDownModule,\n    NgxSpinnerModule\n  ]\n})\nexport class QuizListModule { }\n"],"sourceRoot":"webpack:///","file":"quiz-list-quiz-list-module-es5.js"}