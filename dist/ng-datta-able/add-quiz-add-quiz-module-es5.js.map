{"version":3,"sources":["src/app/demo/quizes/add-quiz/add-quiz.component.html","src/app/demo/quizes/add-quiz/add-quiz-routing.module.ts","src/app/demo/quizes/add-quiz/add-quiz.component.scss","src/app/demo/quizes/add-quiz/add-quiz.component.ts","src/app/demo/quizes/add-quiz/add-quiz.module.ts","src/app/services/dispensaries/dispensaries.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,uxEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,gDAAA,CAAA,kBAAA;AAFb,KADqB,CAAvB;;AAWA,QAAa,oBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJhC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACfb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,+jCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAa,gBAAb;AAAA;AAAA;AAoBE,gCACU,WADV,EAEU,iBAFV,EAGU,WAHV,EAIU,OAJV,EAIoC;AAAA;;AAH1B,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,iBAAA,GAAA,iBAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,OAAA,GAAA,OAAA;AAvBH,aAAA,eAAA,GAAqB,EAArB;AACA,aAAA,QAAA,GAA+B,IAA/B;AACA,aAAA,UAAA,GAA+B,IAA/B;AACA,aAAA,kBAAA,GAA+B,IAA/B;AACA,aAAA,gBAAA,GAA+B,IAA/B;AACA,aAAA,SAAA,aAAwB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAApC;AAEA,aAAA,QAAA,GAAyB,IAAI,4CAAA,CAAA,cAAA,CAAJ,CAAiB;AAC/C,iBAAkB,KAAK,SADwB;AAE9C,UAAA,SAAS,EAAQ;AAF6B,SAAjB,CAAzB;AAKA,aAAA,gBAAA,GAAqB,EAArB;AAEP,aAAA,WAAA,GAAc,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC1B,UAAA,UAAU,EAAM,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CADU;AAE1B,UAAA,IAAI,EAAY,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB;AAFU,SAAd,CAAd;AAUO;;AAzBT;AAAA;AAAA,mCA2BU;AAEN,eAAK,QAAL,CAAc,iBAAd,GAAkC,UAAC,IAAD,EAAS;AAAG,YAAA,IAAI,CAAC,eAAL,GAAuB,KAAvB;AAA+B,WAA7E;;AACA,eAAK,QAAL,CAAc,cAAd,GAA+B,UAAC,IAAD,EAAY,QAAZ,EAA2B,MAA3B,EAAwC,OAAxC,EAAwD;AACrF,YAAA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,IAAL,CAAU,IAAtB;AACD,WAFD;;AAIA,eAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACxC,YAAA,IAAI,EAAY,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAL;AADwB,WAAvB,CAAnB;AAID;AAtCH;AAAA;AAAA,qCAwCe,SAxCf,EAwC6B;AAAA;;AACzB,eAAK,gBAAL,GAAwB,EAAxB;AACA,eAAK,QAAL,GAAsB,SAAS,CAAC,MAAV,CAAiB,KAAjB,CAAuB,CAAvB,CAAtB;AACA,cAAM,UAAU,GAAG,IAAI,UAAJ,EAAnB;AACA,cAAI,SAAS,GAAG,EAAhB;AACA,UAAA,UAAU,CAAC,UAAX,CAAsB,KAAK,QAA3B,EAAqC,OAArC;;AACA,UAAA,UAAU,CAAC,MAAX,GAAoB,YAAK;AACvB,gBAAI,WAAW,GAAG,IAAI,CAAC,KAAL,WAAc,UAAU,CAAC,MAAzB,EAAlB;AAEA,YAAA,WAAW,CAAC,OAAZ,CAAqB,UAAA,OAAO,EAAG;AAC7B,kBAAI,OAAO,CAAC,cAAR,CAAuB,eAAvB,KAA2C,OAAO,CAAC,cAAR,CAAuB,SAAvB,CAA/C,EAAiF;AAC/E,oBAAI,OAAO,GAAG,OAAO,CAAC,SAAD,CAAP,CAAmB,CAAnB,CAAd;;AACA,oBAAI,OAAO,CAAC,cAAR,CAAuB,UAAvB,KAAsC,OAAO,CAAC,cAAR,CAAuB,UAAvB,CAAtC,IAA4E,OAAO,CAAC,cAAR,CAAuB,UAAvB,CAA5E,IAAkH,OAAO,CAAC,cAAR,CAAuB,UAAvB,CAAlH,IAAwJ,OAAO,CAAC,cAAR,CAAuB,gBAAvB,CAA5J,EAAqM;AACnM,kBAAA,KAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,OAA3B;AACD,iBAFD,MAEK;AACH,kBAAA,SAAS,CAAC,IAAV,CAAe,OAAf;AACD;AACF,eAPD,MAOK;AACH,gBAAA,SAAS,CAAC,IAAV,CAAe,OAAf;AACD;AACF,aAXD;AAYA,YAAA,KAAI,CAAC,eAAL,GAAuB,SAAvB;AACD,WAhBD;;AAiBA,UAAA,UAAU,CAAC,OAAX,GAAqB,UAAC,KAAD,EAAU;AAC7B,YAAA,SAAS,CAAC,IAAV,CAAe,KAAf;AACD,WAFD;AAGD;AAlEH;AAAA;AAAA,yCAoEgB;AACZ,cAAI,KAAK,eAAL,CAAqB,MAArB,GAA8B,CAAlC,EAAoC;AAClC,iBAAK,eAAL,GAAuB,EAAvB;AACD;AACF;AAxEH;AAAA;AAAA,uCA8Ec;AAAA;;AAEV,cAAI,CAAC,KAAK,WAAL,CAAiB,OAAtB,EAA8B;AAC5B,iBAAK,WAAL,CAAiB,UAAjB;AACA,gBAAI,IAAI,GAAG,EAAX;AACA,YAAA,IAAI,CAAC,MAAD,CAAJ,GAAe,KAAK,gBAApB;AAAsC,YAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AAEtC,iBAAK,WAAL,CAAiB,UAAjB,CAA4B,IAA5B,EAAkC,IAAlC,CAAwC,UAAA,QAAQ,EAAG;AACjD,kBAAI,QAAQ,CAAC,QAAD,CAAR,KAAuB,GAA3B,EAA+B;AAC7B,gBAAA,MAAI,CAAC,WAAL,CAAiB,UAAjB;;AACA,gBAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CACE,SADF,EAEE,4BAFF,EAGE,SAHF;AAKD,eAPD,MAOK;AACH,gBAAA,gDAAA,CAAA,CAAA,CAAK,IAAL,CACE,OADF,EAEE,uBAFF,EAGE,OAHF;AAKD;AACF,aAfD;AAgBD;AACF;AAtGH;AAAA;AAAA,oCAwGc,IAxGd,EAwG0B;AACtB,eAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB;AACD;AA1GH;AAAA;AAAA,oCA4Gc,IA5Gd,EA4G0B;AACtB,eAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB;AACD;AA9GH;AAAA;AAAA,4BA0EU;AACN,iBAAO,KAAK,WAAL,CAAiB,GAAjB,CAAqB,MAArB,CAAP;AACD;AA5EH;;AAAA;AAAA,OAAA;;;;cAqByB,2CAAA,CAAA,aAAA;;cACM,wEAAA,CAAA,qBAAA;;cACN,wDAAA,CAAA,aAAA;;cACJ,wCAAA,CAAA,mBAAA;;;;AAxBR,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWb,QAAa,aAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAdzB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,gDAAA,CAAA,kBAAA,CAAD,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,qDAAA,CAAA,sBAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,2CAAA,CAAA,qBAAA,CAJO,EAKP,wDAAA,CAAA,cAAA,CALO,EAMP,yDAAA,CAAA,mBAAA,CANO,EAOP,4CAAA,CAAA,kBAAA,CAPO,EAQP,gDAAA,CAAA,sBAAA,CARO,EASP,yCAAA,CAAA,kBAAA,CATO;AAFD,KAAT,CAcyB,CAAA,EAAb,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBb,QAAa,mBAAb;AAAA;AAAA;AAEE,mCAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAAqB;;AAF3C;AAAA;AAAA,sCAIuB,IAJvB,EAIgC;AAC5B,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAA9B,sBAAuD,IAAvD,EAA6D,SAA7D,EAAP;AACD;AANH;AAAA;AAAA,8CAQ+B,UAR/B,EAQgD,QARhD,EAQ+D,MAR/D,EAQ0E;AACtE,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAA7B,kCAA2D,UAA3D,mBAA8E,QAA9E,qBAAiG,MAAjG,GAA2G,SAA3G,EAAP;AACD;AAVH;AAAA;AAAA,0CAY2B,IAZ3B,EAYoC;AAChC,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAA9B,0BAA2D,IAA3D,EAAiE,SAAjE,EAAP;AACD;AAdH;AAAA;AAAA,gDAgBiC,UAhBjC,EAgBkD,QAhBlD,EAgBiE,MAhBjE,EAgB4E;AACxE,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAA7B,2CAAoE,UAApE,mBAAuF,QAAvF,qBAA0G,MAA1G,GAAoH,SAApH,EAAP;AACD;AAlBH;AAAA;AAAA,2CAoB4B,IApB5B,EAoBqC;AACjC,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAA9B,2BAA4D,IAA5D,EAAkE,SAAlE,EAAP;AACD;AAtBH;AAAA;AAAA,0CAwB2B,YAxB3B,EAwB4C;AACxC,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAA7B,yBAAkD,YAAlD,GAAkE,SAAlE,EAAP;AACD;AA1BH;AAAA;AAAA,yCA4B0B,IA5B1B,EA4BmC;AAC/B,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAA9B,yBAA0D,IAA1D,EAAgE,SAAhE,EAAP;AACD;AA9BH;AAAA;AAAA,iEAgC+C;AAC3C,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAA7B,gDAAgF,SAAhF,EAAP;AACD;AAlCH;AAAA;AAAA,6CAoC2B;AACvB,cAAI,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAX,CAAZ;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,sDAAA,CAAA,aAAA,CAAA,CAAY,MAA7B,+BAAwD,KAAK,CAAC,EAA9D,GAAoE,SAApE,EAAP;AACD;AAvCH;;AAAA;AAAA,OAAA;;;;cAE4B,iDAAA,CAAA,YAAA;;;;AAFf,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH/B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG+B,CAAA,EAAnB,mBAAmB,CAAnB","sourcesContent":["export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <app-card cardTitle=\\\"Add Questions\\\" [options]=\\\"false\\\">\\n                <ngx-spinner \\n                    [name]=\\\"'spinner1'\\\" \\n                    [fullScreen]=\\\"true\\\" \\n                    type=\\\"ball-clip-rotate-multiple\\\" \\n                    size=\\\"medium\\\"\\n                >\\n                </ngx-spinner>\\n            <form [formGroup]=\\\"addQuizForm\\\" (ngSubmit) = \\\"onQuizSUbmit(addQuizForm)\\\" #myform=\\\"ngForm\\\" method=\\\"POST\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">   \\n                        <div class=\\\"form-group\\\">\\n                            <label>Uplaod File</label>\\n                            <input type=\\\"file\\\" formControlName=\\\"file\\\" class=\\\"form-control\\\" (click)=\\\"emptyErrorList()\\\" (change)=\\\"fileProgress($event)\\\" ng2FileSelect [uploader]=\\\"uploader\\\" accept=\\\"application/json\\\">\\n                            <span style=\\\"color: red\\\">*Please upload a json formated file</span>\\n                            <div class=\\\"mb-3 error-div mt-3\\\">\\n                                <small *ngIf=\\\"addQuizForm.get('file').hasError('required') && myform.submitted\\\">Please select a JSON file to upload</small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <a href=\\\"trivia_sample.json\\\" download>Downlaod the sample file?</a>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"error-container\\\" *ngIf=\\\"errorDivContent.length > 0\\\">\\n                            <p *ngFor=\\\"let obj of errorDivContent\\\">\\n                                {{obj | json}}\\n                            </p>\\n                        </div>\\n                    </div>\\n                    \\n                </div>\\n                \\n                <button \\n                    type=\\\"submit\\\" \\n                    class=\\\"btn btn-primary\\\" \\n                    [disabled]=\\\"errorDivContent.length > 0\\\"\\n                >\\n                    Submit\\n                </button>\\n            </form>\\n            </app-card>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddQuizComponent } from './add-quiz.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddQuizComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddQuizRoutingModule { }\r\n","export default \".error-container {\\n  background: rgba(255, 0, 0, 0.2);\\n  color: black;\\n  border-radius: 2%;\\n  padding: 3%; }\\n\\n.error-container p {\\n  color: black; }\\n\\n.error-div {\\n  color: red;\\n  background-color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94MjMvRG9jdW1lbnRzL0dpdEh1Yi9kYmMtYnVkc2JhbmstYW5ndWxhci9zcmMvYXBwL2RlbW8vcXVpemVzL2FkZC1xdWl6L2FkZC1xdWl6LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0NBQWdDO0VBQ2hDLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsV0FBVyxFQUFBOztBQUdmO0VBQ0ksWUFBWSxFQUFBOztBQUdoQjtFQUNJLFVBQVU7RUFDVix1QkFBdUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RlbW8vcXVpemVzL2FkZC1xdWl6L2FkZC1xdWl6LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLWNvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMCwgMCwgMC4yKTtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDIlO1xyXG4gICAgcGFkZGluZzogMyU7XHJcbn1cclxuXHJcbi5lcnJvci1jb250YWluZXIgcCB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5lcnJvci1kaXYge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from '../../../../environments/environment';\nimport { QuizService } from '../../../services/quiz/quiz.service';\nimport { DispensariesService } from '../../../services/dispensaries/dispensaries.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-quiz',\n  templateUrl: './add-quiz.component.html',\n  styleUrls: ['./add-quiz.component.scss']\n})\nexport class AddQuizComponent implements OnInit {\n  public errorDivContent    = [];\n  public fileData           : File    = null;\n  public previewUrl         : any     = null;\n  public fileUploadProgress : string  = null;\n  public uploadedFilePath   : string  = null;\n  public uploadAPI          = `${environment.apiUrl}/quiz/upload`;\n\n  public uploader: FileUploader = new FileUploader({\n    'url'           : this.uploadAPI,\n     itemAlias      : 'file'\n  });\n\n  public quizDataToUpload   = [];\n\n  addQuizForm = new FormGroup({\n    dispensary    : new FormControl(''),\n    file          : new FormControl('')\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dispensaryService: DispensariesService,\n    private quizService: QuizService,\n    private spinner: NgxSpinnerService\n    ) { }\n\n  ngOnInit() {\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      console.log(item.file.name);\n    };\n\n    this.addQuizForm = this.formBuilder.group({\n      file          : ['', [Validators.required]],\n    });  \n  \n  }\n\n  fileProgress(fileInput: any) {\n    this.quizDataToUpload = [];\n    this.fileData = <File>fileInput.target.files[0];\n    const fileReader = new FileReader();\n    let errorList = [];\n    fileReader.readAsText(this.fileData, \"UTF-8\");\n    fileReader.onload = () => { \n      var finalResult = JSON.parse(`${fileReader.result}`);\n      \n      finalResult.forEach( element => { \n        if (element.hasOwnProperty(\"question_text\") && element.hasOwnProperty(\"answers\")){ \n          let answers = element[\"answers\"][0];\n          if (answers.hasOwnProperty(\"answer_a\") && answers.hasOwnProperty(\"answer_b\") && answers.hasOwnProperty(\"answer_c\") && answers.hasOwnProperty(\"answer_d\") && answers.hasOwnProperty(\"correct_answer\")){\n            this.quizDataToUpload.push(element);\n          }else{\n            errorList.push(element);\n          }\n        }else{\n          errorList.push(element);\n        }\n      });\n      this.errorDivContent = errorList;\n    }\n    fileReader.onerror = (error) => {\n      errorList.push(error);\n    }\n  }\n\n  emptyErrorList(){\n    if (this.errorDivContent.length > 0){ \n      this.errorDivContent = [];\n    }\n  }\n\n  get file(){\n    return this.addQuizForm.get('file');\n  }\n\n  onQuizSUbmit(){\n\n    if (!this.addQuizForm.invalid){\n      this.showSpinner('spinner1')\n      var data = {};\n      data['data'] = this.quizDataToUpload; console.log(data)\n      \n      this.quizService.uploadQuiz(data).then( response => {\n        if (response['status'] === 200){\n          this.hideSpinner('spinner1');\n          swal.fire(\n            'Success',\n            'Quiz importes successfully',\n            'success'\n          );\n        }else{\n          swal.fire(\n            'Error',\n            'Internal Server Error',\n            'error'\n          )\n        }\n      })\n    }\n  }\n\n  showSpinner(name: string) { \n    this.spinner.show(name);\n  }\n\n  hideSpinner(name: string) {\n    this.spinner.hide(name);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddQuizComponent } from './add-quiz.component';\nimport { AddQuizRoutingModule } from './add-quiz-routing.module';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { SharedModule } from '../../../theme/shared/shared.module';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { SelectDropDownModule } from 'ngx-select-dropdown';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [AddQuizComponent],\n  imports: [\n    CommonModule,\n    AddQuizRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    SweetAlert2Module,\n    FileUploadModule,\n    SelectDropDownModule,\n    NgxSpinnerModule\n  ]\n})\nexport class AddQuizModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DispensariesService {\n\n  constructor(private http: HttpClient) { }\n\n  public addDispensary(data: any){\n    return this.http.post(`${environment.apiUrl}/dispensary/add`, data).toPromise();\n  }\n\n  public getActiveDispensaries(pageNumber: any, pageSize: any, userID: any){\n    return this.http.get(`${environment.apiUrl}/dispensary/all?page=${pageNumber}&size=${pageSize}&userID=${userID}`).toPromise();\n  }\n\n  public disableDispensary(data: any){\n    return this.http.post(`${environment.apiUrl}/dispensary/disable`, data).toPromise();\n  }\n\n  public getDisabledDispensaries(pageNumber: any, pageSize: any, userID: any){\n    return this.http.get(`${environment.apiUrl}/dispensary/disabled/all?page=${pageNumber}&size=${pageSize}&userID=${userID}`).toPromise();\n  }\n\n  public activateDispensary(data: any){\n    return this.http.post(`${environment.apiUrl}/dispensary/activate`, data).toPromise();\n  }\n\n  public getDispensaryById(dispensaryId: any){\n    return this.http.get(`${environment.apiUrl}/dispensary/${dispensaryId}`).toPromise();\n  }\n\n  public updateDispensary(data: any){\n    return this.http.post(`${environment.apiUrl}/dispensary/update`, data).toPromise();\n  }\n\n  public getActiveDispensariesWithoutPagination(){\n    return this.http.get(`${environment.apiUrl}/dispensary/active/all/without-pagination`).toPromise();\n  }\n\n  public getAdminDispensary(){\n    let admin = JSON.parse(localStorage.getItem('userInfo'));\n    return this.http.get(`${environment.apiUrl}/dispensary/admin/${admin.id}`).toPromise();\n  }\n}\n"],"sourceRoot":"webpack:///","file":"add-quiz-add-quiz-module-es5.js"}