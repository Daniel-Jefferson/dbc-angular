{"version":3,"sources":["src/app/demo/dispensaries/add-dispensary/add-dispensary.component.html","src/app/demo/dispensaries/add-dispensary/add-dispensary-routing.module.ts","src/app/demo/dispensaries/add-dispensary/add-dispensary.component.scss","src/app/demo/dispensaries/add-dispensary/add-dispensary.component.ts","src/app/demo/dispensaries/add-dispensary/add-dispensary.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <app-card cardTitle=\\\"Add Dispensary\\\" [options]=\\\"false\\\">\\n                <label>Enter address<span class=\\\"mandatory\\\">*</span></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mapAdd\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" placeholder=\\\"Search Nearest Location\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" value=\\\"{{showAddress}}\\\" spellcheck=\\\"off\\\" type=\\\"text\\\" #search>\\n                <agm-map \\n                    [latitude]=\\\"mapLatitude\\\" \\n                    [longitude]=\\\"mapLongitude\\\" \\n                    [zoom]=\\\"zoom\\\" >\\n                    <agm-marker \\n                        [latitude]=\\\"mapLatitude\\\" \\n                        [longitude]=\\\"mapLongitude\\\"\\n                        [markerDraggable]=\\\"true\\\"\\n                        (dragEnd)=\\\"markerDragEnd($event)\\\">\\n                    </agm-marker>\\n                </agm-map>\\n            <form [formGroup]=\\\"addDispensaryForm\\\" (ngSubmit) = \\\"onAddDispensarySubmit(addDispensaryForm)\\\" #myform=\\\"ngForm\\\" method=\\\"POST\\\" class=\\\"mt-3\\\" enctype=\\\"multipart/form-data\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Title<span class=\\\"mandatory\\\">*</span></label>\\n                            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" aria-describedby=\\\"Username\\\" placeholder=\\\"Enter Title\\\" required>\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"addDispensaryForm.get('name').hasError('required') && myform.submitted\\\">Title Required</small>\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"form-group\\\">\\n                            <label>Opening Time<span class=\\\"mandatory\\\">*</span></label>\\n                            <input type=\\\"time\\\" formControlName=\\\"opening_time\\\" class=\\\"form-control\\\" aria-describedby=\\\"Opening Time\\\" placeholder=\\\"Enter Opening Time\\\" required>\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"addDispensaryForm.get('opening_time').hasError('required') && myform.submitted\\\">Opening Time Required</small>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label>Opening Day<span class=\\\"mandatory\\\">*</span></label>\\n                            <select class=\\\"form-control\\\" formControlName=\\\"open_day\\\">\\n                                <option value=\\\"Mon\\\">Monday</option>\\n                                <option value=\\\"Tue\\\">Tuesday</option>\\n                                <option value=\\\"Wed\\\">Wednesday</option>\\n                                <option value=\\\"Thu\\\">Thursday</option>\\n                                <option value=\\\"Fri\\\">Friday</option>\\n                                <option value=\\\"Sat\\\">Saturday</option>\\n                                <option value=\\\"Sun\\\">Sunday</option>\\n                            </select>\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"addDispensaryForm.get('open_day').hasError('required') && myform.submitted\\\">Opening Day Required</small>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label>Image<span class=\\\"mandatory\\\">*</span></label>\\n                            <input type=\\\"file\\\" formControlName=\\\"image\\\" class=\\\"form-control\\\" aria-describedby=\\\"Image\\\" (change)=\\\"fileProgress($event)\\\" ng2FileSelect [uploader]=\\\"uploader\\\" accept=\\\"image/*\\\">\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"addDispensaryForm.get('image').hasError('required') && myform.submitted\\\">Image Required</small>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Phone<span class=\\\"mandatory\\\">*</span></label>\\n                            <input type=\\\"text\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" aria-describedby=\\\"Phone\\\" placeholder=\\\"Enter Phone\\\" required>\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"addDispensaryForm.get('phone').hasError('required') && myform.submitted\\\">Phone Required</small>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label>Closing Time<span class=\\\"mandatory\\\">*</span></label>\\n                            <input type=\\\"time\\\" formControlName=\\\"closing_time\\\" class=\\\"form-control\\\" aria-describedby=\\\"Closing Time\\\" placeholder=\\\"Enter Closing Time\\\" required>\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"addDispensaryForm.get('closing_time').hasError('required') && myform.submitted\\\">Closing Time Required</small>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label>Closing Day<span class=\\\"mandatory\\\">*</span></label>\\n                            <select class=\\\"form-control\\\" formControlName=\\\"close_day\\\">\\n                                <option value=\\\"Mon\\\">Monday</option>\\n                                <option value=\\\"Tue\\\">Tuesday</option>\\n                                <option value=\\\"Wed\\\">Wednesday</option>\\n                                <option value=\\\"Thu\\\">Thursday</option>\\n                                <option value=\\\"Fri\\\">Friday</option>\\n                                <option value=\\\"Sat\\\">Saturday</option>\\n                                <option value=\\\"Sun\\\">Sunday</option>\\n                            </select>\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"addDispensaryForm.get('close_day').hasError('required') && myform.submitted\\\">Closing Day Required</small>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\" style=\\\"display: none;\\\">\\n                            <label>Address<span class=\\\"mandatory\\\">*</span></label>\\n                            <textarea formControlName=\\\"address\\\" class=\\\"form-control\\\" aria-describedby=\\\"Address\\\"></textarea>\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"addDispensaryForm.get('address').hasError('required') && myform.submitted\\\">Address Required</small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Deal</label>\\n                            <textarea formControlName=\\\"deal\\\" class=\\\"form-control\\\" aria-describedby=\\\"Deal\\\"></textarea>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"sub_lable\\\">Subscription<span class=\\\"mandatory\\\">*</span></label>\\n                            <div class=\\\"subscription_plans_wrapper\\\">\\n                                <div class=\\\"subscription_plans_wrapper_inner selected\\\">\\n                                    <h3>Free Trial</h3>\\n                                    <p>Give us a try free for 3 months!</p>\\n                                    <span>FREE</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"subscription_plans_wrapper\\\">\\n                                <div class=\\\"subscription_plans_wrapper_inner\\\">\\n                                    <h3>Monthly</h3>\\n                                    <p>Billed as one payment of $100.00 every month.</p>\\n                                    <span>$100.00/month</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"subscription_plans_wrapper\\\">\\n                                <div class=\\\"subscription_plans_wrapper_inner\\\">\\n                                    <h3>Quarterly</h3>\\n                                    <p>Billed as one payment of $270.00 every 3 month.</p>\\n                                    <span>$90.00/month</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"subscription_plans_wrapper\\\">\\n                                <div class=\\\"subscription_plans_wrapper_inner\\\">\\n                                    <h3>Anually</h3>\\n                                    <p>Billed as one payment of $960.00 every 12 month.</p>\\n                                    <span>$80.00/month</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"custom-control custom-checkbox mb-3\\\">\\n                                <input type=\\\"checkbox\\\" value=\\\"false\\\" class=\\\"custom-control-input\\\" formControlName=\\\"featured\\\" id=\\\"customControlValidation1\\\">\\n                                <label class=\\\"custom-control-label\\\" for=\\\"customControlValidation1\\\">Featured Dispensary</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            </form>\\n            </app-card>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddDispensaryComponent } from './add-dispensary.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddDispensaryComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddDispensaryRoutingModule { }\r\n","export default \"agm-map {\\n  height: 300px; }\\n\\n.error-div {\\n  color: red;\\n  background-color: white; }\\n\\nlabel {\\n  font-weight: bold; }\\n\\n.mandatory {\\n  color: red; }\\n\\n.subscription_plans_wrapper {\\n  padding-bottom: 20px;\\n  position: relative; }\\n\\n.subscription_plans_wrapper .subscription_plans_wrapper_inner.selected {\\n    background: #59aa70;\\n    cursor: pointer; }\\n\\n.subscription_plans_wrapper .subscription_plans_wrapper_inner.selected h3 {\\n      color: #fff; }\\n\\n.subscription_plans_wrapper .subscription_plans_wrapper_inner.selected p {\\n      color: #fff; }\\n\\n.subscription_plans_wrapper .subscription_plans_wrapper_inner.selected span {\\n      color: #fff; }\\n\\n.subscription_plans_wrapper .subscription_plans_wrapper_inner {\\n    background-color: #f7f7f7;\\n    padding: 15px 20px;\\n    cursor: not-allowed;\\n    display: block; }\\n\\n.subscription_plans_wrapper .subscription_plans_wrapper_inner h3 {\\n      font-size: 17px;\\n      margin-bottom: 2px;\\n      color: #888; }\\n\\n.subscription_plans_wrapper .subscription_plans_wrapper_inner p {\\n      margin: 0px; }\\n\\n.subscription_plans_wrapper .subscription_plans_wrapper_inner span {\\n      position: absolute;\\n      right: 50px;\\n      font-size: 16px;\\n      top: 50%;\\n      margin-top: -20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94MjMvRG9jdW1lbnRzL0dpdEh1Yi9kYmMtYnVkc2JhbmstYW5ndWxhci9zcmMvYXBwL2RlbW8vZGlzcGVuc2FyaWVzL2FkZC1kaXNwZW5zYXJ5L2FkZC1kaXNwZW5zYXJ5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYSxFQUFBOztBQUdqQjtFQUNJLFVBQVU7RUFDVix1QkFBdUIsRUFBQTs7QUFFM0I7RUFDQyxpQkFBaUIsRUFBQTs7QUFFbEI7RUFDQyxVQUFVLEVBQUE7O0FBRVg7RUFDSSxvQkFBb0I7RUFDcEIsa0JBQWtCLEVBQUE7O0FBRnRCO0lBS1MsbUJBQW1CO0lBQ25CLGVBQWUsRUFBQTs7QUFOeEI7TUFRTyxXQUFXLEVBQUE7O0FBUmxCO01BV08sV0FBVyxFQUFBOztBQVhsQjtNQWNPLFdBQVcsRUFBQTs7QUFkbEI7SUFrQksseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsY0FBYyxFQUFBOztBQXJCbkI7TUF3Qk0sZUFBZTtNQUNmLGtCQUFrQjtNQUNsQixXQUFXLEVBQUE7O0FBMUJqQjtNQThCTSxXQUFXLEVBQUE7O0FBOUJqQjtNQWlDTSxrQkFBa0I7TUFDbEIsV0FBVztNQUNYLGVBQWU7TUFDZixRQUFRO01BQ1IsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kZW1vL2Rpc3BlbnNhcmllcy9hZGQtZGlzcGVuc2FyeS9hZGQtZGlzcGVuc2FyeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFnbS1tYXAge1xyXG4gICAgaGVpZ2h0OiAzMDBweDtcclxufVxyXG5cclxuLmVycm9yLWRpdiB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxubGFiZWx7XHJcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLm1hbmRhdG9yeXtcclxuXHRjb2xvcjogcmVkO1xyXG59XHJcbi5zdWJzY3JpcHRpb25fcGxhbnNfd3JhcHBlciB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAuc3Vic2NyaXB0aW9uX3BsYW5zX3dyYXBwZXJfaW5uZXIuc2VsZWN0ZWR7XHJcbiAgICBcdCAgICBiYWNrZ3JvdW5kOiAjNTlhYTcwO1xyXG4gICAgXHQgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgXHQgICAgIGgze1xyXG5cdCAgICBcdFx0Y29sb3I6ICNmZmY7XHJcblx0XHQgICAgfVxyXG5cdFx0ICAgIHB7XHJcblx0XHQgICAgXHRjb2xvcjogI2ZmZjtcclxuXHRcdCAgICB9XHJcblx0XHQgICAgc3BhbiB7XHJcblx0XHQgICAgXHRjb2xvcjogI2ZmZjtcclxuXHRcdCAgICB9XHJcbiAgICB9XHJcbiAgICAuc3Vic2NyaXB0aW9uX3BsYW5zX3dyYXBwZXJfaW5uZXIge1xyXG5cdCAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xyXG5cdCAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XHJcblx0ICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcblx0ICAgIGRpc3BsYXk6IGJsb2NrO1xyXG5cclxuXHQgICAgaDN7XHJcblx0ICAgIFx0Zm9udC1zaXplOiAxN3B4O1xyXG5cdCAgICBcdG1hcmdpbi1ib3R0b206IDJweDtcclxuXHQgICAgXHRjb2xvcjogIzg4ODtcclxuXHQgICAgfVxyXG5cclxuXHQgICAgcHtcclxuXHQgICAgXHRtYXJnaW46IDBweDtcclxuXHQgICAgfVxyXG5cdCAgICBzcGFuIHtcclxuXHRcdCAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHQgICAgcmlnaHQ6IDUwcHg7XHJcblx0XHQgICAgZm9udC1zaXplOiAxNnB4O1xyXG5cdFx0ICAgIHRvcDogNTAlO1xyXG5cdFx0ICAgIG1hcmdpbi10b3A6IC0yMHB4O1xyXG5cdFx0fVxyXG5cdH1cclxufSJdfQ== */\"","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { DispensariesService } from '../../../services/dispensaries/dispensaries.service';\nimport { Router } from '@angular/router';\nimport { MapsAPILoader, MouseEvent } from '@agm/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from '../../../../environments/environment';\nimport swal from 'sweetalert2';\nimport googlemaps from 'googlemaps';\n\n@Component({\n  selector: 'app-add-dispensary',\n  templateUrl: './add-dispensary.component.html',\n  styleUrls: ['./add-dispensary.component.scss']\n})\nexport class AddDispensaryComponent implements OnInit {\n\n  public showAddress        : any;\n  public mapLatitude        : number;\n  public mapLongitude       : number;\n  public zoom               : number;\n  public changedAddress     : string;\n  public mapAddress         : string;\n  private geoCoder          : any;\n  public imageName          : string;\n  public fileData           : File = null;\n  public previewUrl         : any = null;\n  public fileUploadProgress : string = null;\n  public uploadedFilePath   : string = null;\n  public uploadAPI          = `${environment.apiUrl}/dispensary/add/image`;\n\n  imageTitle = 'budsbankadminpanel';\n  public uploader: FileUploader = new FileUploader({\n    'url'           : this.uploadAPI,\n     itemAlias      : 'image',\n     allowedFileType: ['image']\n  });\n\n\n  @ViewChild('search', {'static': true}) \n  public searchElementRef: ElementRef;\n\n  addDispensaryForm = new FormGroup({\n    featured      : new FormControl(''),\n    name          : new FormControl(''),\n    longitude     : new FormControl(''),\n    latitude      : new FormControl(''),\n    phone         : new FormControl(''),\n    address       : new FormControl(''),\n    image         : new FormControl(''),\n    opening_time  : new FormControl(''),\n    closing_time  : new FormControl(''),\n    open_day      : new FormControl(''),\n    close_day     : new FormControl(''),\n    deal          : new FormControl(''),\n  });\n\n  constructor(\n    private router: Router, \n    private dispensary: DispensariesService, \n    private formBuilder: FormBuilder, \n    private mapsAPILoader: MapsAPILoader, \n    private ngZone: NgZone) { }\n  \n  ngOnInit() {\n    this.mapsAPILoader.load().then(() => {\n      this.setCurrentLocation();\n      this.geoCoder = new google.maps.Geocoder;\n \n      let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n        types: [\"address\"]\n      });\n      autocomplete.addListener(\"place_changed\", () => {\n        this.ngZone.run(() => {\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n          this.mapLatitude = place.geometry.location.lat();\n          this.mapLongitude = place.geometry.location.lng();\n          this.changedAddress = place.formatted_address;\n          this.zoom = 12;\n        });\n      });\n    });\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    this.uploader.onCompleteItem = (item: any) => {\n      console.log(item.file.name);\n    };\n\n\n    this.addDispensaryForm = this.formBuilder.group({\n      featured    : [false, [Validators.required]],\n      name        : ['', [Validators.required]],\n      phone       : ['', [Validators.required]],\n      address     : [false, [Validators.required]],\n      image       : [null, [Validators.required]],\n      opening_time: ['', [Validators.required]],\n      closing_time: ['', [Validators.required]],\n      open_day    : ['', [Validators.required]],\n      close_day   : ['', [Validators.required]],\n      deal        : []\n    })\n  }\n\n  private setCurrentLocation() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.mapLatitude = position.coords.latitude;\n        this.mapLongitude = position.coords.longitude;\n        this.zoom = 8;\n        this.getAddress(this.mapLatitude, this.mapLongitude, 0);\n      });\n    }\n  }\n\n  markerDragEnd($event: MouseEvent) {\n    \n    this.mapLatitude = $event.coords.lat;\n    this.mapLongitude = $event.coords.lng;\n    this.getAddress(this.mapLatitude, this.mapLongitude, 1);\n  }\n \n  getAddress(latitude: any, longitude: any, isDrag: any) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n      \n      if (status === 'OK') {\n        if (results[0]) {\n          this.zoom = 12;\n          this.mapAddress = results[0].formatted_address;\n          if(isDrag === 1 || isDrag === '1'){\n              this.showAddress = results[0].formatted_address;\n              this.changedAddress = results[0].formatted_address;\n          }\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n \n    });\n  }\n\n  get name(){\n    return this.addDispensaryForm.get('name');\n  }\n\n  get longitude(){\n    return this.addDispensaryForm.get('longitude');\n  }\n\n  get latitude(){\n    return this.addDispensaryForm.get('latitude');\n  }\n\n  get phone(){\n    return this.addDispensaryForm.get('phone');\n  }\n\n  get address(){\n    return this.addDispensaryForm.get('address');\n  }\n\n  get image(){\n    return this.addDispensaryForm.get('image');\n  }\n\n  get opening_time(){\n    return this.addDispensaryForm.get('opening_time');\n  }\n\n  get closing_time(){\n    return this.addDispensaryForm.get('closing_time');\n  }\n\n  get open_day(){\n    return this.addDispensaryForm.get('open_day');\n  }\n\n  get close_day(){\n    return this.addDispensaryForm.get('close_day');\n  }\n\n  get deal(){\n    return this.addDispensaryForm.get('deal');\n  }\n\n  fileProgress(fileInput: any) {\n    this.fileData = <File>fileInput.target.files[0];\n  }\n\n  onAddDispensarySubmit(){\n    if (!this.addDispensaryForm.invalid){\n      var data = this.addDispensaryForm.value;\n      data['longitude'] = this.mapLongitude;\n      data['latitude'] = this.mapLatitude;\n      data['formatted_address'] = this.changedAddress;\n      if (!data['featured']){\n        data['featured'] = 'false';\n      }\n      let admin = JSON.parse(localStorage.getItem('userInfo'));\n      data['user_id'] = admin.id;\n      this.dispensary.addDispensary(data).then(addResponse => { \n        if (addResponse['status'] === 200){\n          if (this.fileData){ \n            this.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n              form.append('dispensaryId' , addResponse['data'].dispensaryId);\n            }\n            this.uploader.uploadAll();\n            this.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any): any => {\n              if(response){ \n                var formatedResponse = JSON.parse(response); \n                if (formatedResponse['status'] === 200){\n                  swal.fire('Success', \"Dispensary Added Successfully\", 'success').then((result) => {\n                    let admin = JSON.parse(localStorage.getItem('userInfo'));\n                    if(admin.role === 1){\n                      this.router.navigateByUrl(`/admin/dispensary/${addResponse['data'].dispensaryId}`);\n                    }else{\n                      this.router.navigateByUrl('/admin/dispensary/profile');\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }else{ \n          console.log(addResponse)\n          swal.fire('Error', `${addResponse['message']}`, 'error');\n        }\n      });  \n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddDispensaryComponent } from './add-dispensary.component';\nimport { AddDispensaryRoutingModule } from './add-dispensary-routing.module';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { SharedModule } from '../../../theme/shared/shared.module';\nimport { AgmCoreModule } from '@agm/core';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\n\n@NgModule({\n  declarations: [AddDispensaryComponent],\n  imports: [\n    CommonModule,\n    AddDispensaryRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    FileUploadModule,\n    SweetAlert2Module,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyAcARFFtUPK8IeCXsVmh5I7CIw4hnxejqU',\n      libraries: ['places']\n    })\n  ]\n})\nexport class AddDispensaryModule { }\n\n\n// AIzaSyDthHz_mCeEJPZIwRmxkSgjKYnEEkJgedk"],"sourceRoot":"webpack:///","file":"add-dispensary-add-dispensary-module-es5.js"}