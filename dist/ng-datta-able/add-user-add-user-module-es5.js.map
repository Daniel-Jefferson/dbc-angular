{"version":3,"sources":["src/app/demo/user/add-user/add-user.component.html","src/app/demo/user/add-user/add-user-routing.module.ts","src/app/demo/user/add-user/add-user.component.scss","src/app/demo/user/add-user/add-user.component.ts","src/app/demo/user/add-user/add-user.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <app-card cardTitle=\\\"Add User\\\" [options]=\\\"false\\\">\\r\\n            <form [formGroup]=\\\"addUserForm\\\" (ngSubmit) = \\\"onAddUserSubmit(addUserForm)\\\" #myform=\\\"ngForm\\\" method=\\\"POST\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <h4 class=\\\"mb-4 blue\\\" id=\\\"basic-info-heading\\\">Basic Information</h4>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Username</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"userName\\\" class=\\\"form-control\\\" aria-describedby=\\\"Username\\\" placeholder=\\\"Enter Username\\\" required>\\r\\n                            <div class=\\\"mb-3 error-div\\\">\\r\\n                                <small *ngIf=\\\"addUserForm.get('userName').hasError('required') && myform.submitted\\\">Username Required</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Email address</label>\\r\\n                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" aria-describedby=\\\"Email\\\" placeholder=\\\"Enter Email\\\">\\r\\n                            <div class=\\\"mb-3 error-div\\\">\\r\\n                                <small *ngIf=\\\"addUserForm.get('email').hasError('required') && myform.submitted\\\">Email Required</small>\\r\\n                                <small *ngIf=\\\"!addUserForm.get('email').hasError('required') && addUserForm.get('email').status === 'INVALID' && addUserForm.get('email').touched  && myform.submitted\\\">Invalid Email Address</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>First Name</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" aria-describedby=\\\"First Name\\\" placeholder=\\\"Enter Firstname\\\" required>\\r\\n                            <div class=\\\"mb-3 error-div\\\">\\r\\n                                <small *ngIf=\\\"addUserForm.get('firstName').hasError('required') && myform.submitted\\\">Firstname Required</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Last Name</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" aria-describedby=\\\"Last Name\\\" placeholder=\\\"Enter Lastname\\\">\\r\\n                            <div class=\\\"mb-3 error-div\\\">\\r\\n                                <small *ngIf=\\\"addUserForm.get('lastName').hasError('required') && myform.submitted\\\">Last Required</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Phone</label>\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" aria-describedby=\\\"Phone\\\" placeholder=\\\"Enter Phone\\\" required>\\r\\n                            <div class=\\\"mb-3 error-div\\\">\\r\\n                                <small *ngIf=\\\"addUserForm.get('phone').hasError('required') && myform.submitted\\\">Phone Required</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Password</label>\\r\\n                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" aria-describedby=\\\"Password\\\" placeholder=\\\"Password\\\">\\r\\n                            <div class=\\\"mb-3 error-div\\\">\\r\\n                                <small *ngIf=\\\"addUserForm.get('password').hasError('required') && myform.submitted\\\">Password Required</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6 text-center\\\">\\r\\n                        <h4 class=\\\"mb-4 blue mt-4\\\" id=\\\"basic-info-heading\\\">Profile Image</h4>\\r\\n                        <img id=\\\"profile-image\\\" class=\\\"img-fluid img-thumbnail img-rounded\\\" [src]=\\\"previewUrl ? previewUrl: addUserForm.get('image').value !== null ? addUserForm.get('image').value: 'assets/images/admin-user-demo.png'\\\" height=\\\"250\\\" width=\\\"250\\\" />\\r\\n                        <div class=\\\"form-group\\\" id=\\\"image-wrapper\\\">\\r\\n                            <input type=\\\"file\\\" formControlName=\\\"image\\\" (change)=\\\"fileProgress($event)\\\" ng2FileSelect [uploader]=\\\"uploader\\\" class=\\\"form-control\\\" aria-describedby=\\\"Image\\\" style=\\\"width: 250px\\\">\\r\\n                        </div>    \\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n            </form>\\r\\n            </app-card>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddUserComponent } from './add-user.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddUserComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddUserRoutingModule { }\r\n","export default \".error-div {\\n  color: red; }\\n\\n#basic-info-heading {\\n  color: #3F4D67; }\\n\\n#image-wrapper input {\\n  display: inline !important;\\n  max-width: auto; }\\n\\n#image-wrapper {\\n  text-align: center !important;\\n  margin: auto; }\\n\\n#profile-image {\\n  max-width: 250px !important;\\n  max-height: 250px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94MjMvRG9jdW1lbnRzL0dpdEh1Yi9kYmMtYnVkc2JhbmstYW5ndWxhci9zcmMvYXBwL2RlbW8vdXNlci9hZGQtdXNlci9hZGQtdXNlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVUsRUFBQTs7QUFHZDtFQUNJLGNBQWMsRUFBQTs7QUFFbEI7RUFDSSwwQkFBMEI7RUFDMUIsZUFBZSxFQUFBOztBQUduQjtFQUNJLDZCQUE2QjtFQUM3QixZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksMkJBQTJCO0VBQzNCLDRCQUE0QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGVtby91c2VyL2FkZC11c2VyL2FkZC11c2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLWRpdiB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4jYmFzaWMtaW5mby1oZWFkaW5nIHtcclxuICAgIGNvbG9yOiAjM0Y0RDY3O1xyXG59XHJcbiNpbWFnZS13cmFwcGVyIGlucHV0IHtcclxuICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50O1xyXG4gICAgbWF4LXdpZHRoOiBhdXRvO1xyXG59XHJcblxyXG4jaW1hZ2Utd3JhcHBlciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICAgIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuI3Byb2ZpbGUtaW1hZ2Uge1xyXG4gICAgbWF4LXdpZHRoOiAyNTBweCAhaW1wb3J0YW50O1xyXG4gICAgbWF4LWhlaWdodDogMjUwcHggIWltcG9ydGFudDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from '../../../services/user/user.service';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from '../../../../environments/environment';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n\n  public fileData           : File = null;\n  public previewUrl         : any = null;\n  public fileUploadProgress : string = null;\n  public uploadedFilePath   : string = null;\n  public uploadAPI          = `${environment.apiUrl}/user/update/image`;\n\n  title = 'budsbankadminpanel';\n  public uploader: FileUploader = new FileUploader({\n    'url'           : this.uploadAPI,\n     itemAlias      : 'image',\n     allowedFileType: ['image']\n  });\n\n  addUserForm = new FormGroup({\n    userName    : new FormControl(''),\n    email       : new FormControl(''), \n    firstName   : new FormControl(''),\n    lastName    : new FormControl(''),\n    phone       : new FormControl(''),\n    password    : new FormControl(''),\n    image       : new FormControl('')\n  });\n\n  constructor(private formBuilder: FormBuilder, private user: UserService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      console.log(item.file.name);\n    };\n\n    this.addUserForm = this.formBuilder.group({\n      userName    : ['', [Validators.required]],\n      email       : ['', [Validators.required, Validators.email]],\n      firstName   : ['', [Validators.required]],\n      lastName    : ['', [Validators.required]],\n      phone       : ['', [Validators.required]],\n      password    : ['', [Validators.required]],\n      image       : [null]\n    });\n  }\n\n  get username(){\n    return this.addUserForm.get('userName');\n  }\n\n  get email(){\n    return this.addUserForm.get('email');\n  }\n\n  get firstname(){\n    return this.addUserForm.get('firstName');\n  }\n\n  get lastname(){\n    return this.addUserForm.get('lastName');\n  }\n\n  get phone(){\n    return this.addUserForm.get('phone');\n  }\n\n  get password(){\n    return this.addUserForm.get('password');\n  }\n\n  get image(){\n    return this.addUserForm.get('image');\n  }\n\n  fileProgress(fileInput: any) {\n    this.fileData = <File>fileInput.target.files[0];\n    this.preview();\n  }\n\n  preview() {\n    var mimeType = this.fileData.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n\n    var reader = new FileReader();      \n    reader.readAsDataURL(this.fileData); \n    reader.onload = (_event) => { \n      this.previewUrl = reader.result; \n    }\n  }\n\n  onAddUserSubmit(){\n    if (!this.addUserForm.invalid){\n      var data = this.addUserForm.value;\n      this.user.register(data).then(registerResponse => { console.log(registerResponse)\n        if (registerResponse['status'] === 200){\n          if (this.fileData){ \n            this.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n              form.append('userId' , registerResponse['user'].id);\n            }\n            this.uploader.uploadAll();\n            this.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any): any => {\n              if(response){ \n                var formatedResponse = JSON.parse(response); \n                if (formatedResponse['status'] !== 200){\n                  swal.fire('Error', `${formatedResponse['message']}`, 'error');\n                }\n              }\n            }\n          }\n          this.router.navigate(['/admin/user/all']);\n          swal.fire('Success', \"User Added Successfully\", 'success');\n        }else{\n          swal.fire('Error', `${registerResponse['message']}`, 'error');\n        }\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddUserRoutingModule } from './add-user-routing.module'\nimport { AddUserComponent } from './add-user.component';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { SharedModule } from '../../../theme/shared/shared.module';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { FileUploadModule } from 'ng2-file-upload';\n\n@NgModule({\n  declarations: [AddUserComponent],\n  imports: [\n    CommonModule,\n    AddUserRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    SweetAlert2Module,\n    FileUploadModule\n  ]\n})\nexport class AddUserModule { }\n"],"sourceRoot":"webpack:///","file":"add-user-add-user-module-es5.js"}