{"version":3,"sources":["src/app/demo/user/update-user/update-user.component.html","src/app/demo/user/update-user/update-user-routing.module.ts","src/app/demo/user/update-user/update-user.component.scss","src/app/demo/user/update-user/update-user.component.ts","src/app/demo/user/update-user/update-user.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <app-card cardTitle=\\\"Update User\\\" [options]=\\\"false\\\">\\n            <form [formGroup]=\\\"updateUserForm\\\" (ngSubmit) = \\\"onUpdateUserSubmit(addUserForm)\\\" #myform=\\\"ngForm\\\" method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <h4 class=\\\"mb-4\\\" id=\\\"basic-info-heading\\\">Basic Information</h4>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Username</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" aria-describedby=\\\"Username\\\" placeholder=\\\"Enter Username\\\" required>\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"updateUserForm.get('username').hasError('required') && myform.submitted\\\">Username Required</small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>First Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"first_name\\\" class=\\\"form-control\\\" aria-describedby=\\\"First Name\\\" placeholder=\\\"Enter Firstname\\\" required>\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"updateUserForm.get('first_name').hasError('required') && myform.submitted\\\">Firstname Required</small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Last Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"last_name\\\" class=\\\"form-control\\\" aria-describedby=\\\"Last Name\\\" placeholder=\\\"Enter Lastname\\\">\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"updateUserForm.get('last_name').hasError('required') && myform.submitted\\\">Last Required</small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Email address</label>\\n                            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" aria-describedby=\\\"Email\\\" placeholder=\\\"Enter Email\\\">\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"updateUserForm.get('email').hasError('required') && myform.submitted\\\">Email Required</small>\\n                                <small *ngIf=\\\"!updateUserForm.get('email').hasError('required') && updateUserForm.get('email').status === 'INVALID' && addUserForm.get('email').touched  && myform.submitted\\\">Invalid Email Address</small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Phone</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" aria-describedby=\\\"Phone\\\" placeholder=\\\"Enter Phone\\\" required>\\n                            <div class=\\\"mb-3 error-div\\\">\\n                                <small *ngIf=\\\"updateUserForm.get('phone').hasError('required') && myform.submitted\\\">Phone Required</small>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <input type=\\\"hidden\\\" formControlName=\\\"user_id\\\" value=\\\"{{updateUserForm.get('user_id').value}}\\\">\\n                    <div class=\\\"col-md-6 text-center\\\">\\n                        <h4 class=\\\"mb-4\\\" id=\\\"basic-info-heading\\\">Profile Image</h4>\\n                        <img id=\\\"profile-image\\\" class=\\\"img-fluid img-thumbnail img-rounded mt-4\\\" [src]=\\\"previewUrl ? previewUrl: updateUserForm.get('image').value !== null ? updateUserForm.get('image').value: 'assets/images/admin-user-demo.png'\\\" height=\\\"250\\\" width=\\\"250\\\" />\\n                        <div class=\\\"form-group\\\" id=\\\"image-wrapper\\\">\\n                            <input type=\\\"file\\\" formControlName=\\\"image\\\" (change)=\\\"fileProgress($event)\\\" ng2FileSelect [uploader]=\\\"uploader\\\" class=\\\"form-control\\\" aria-describedby=\\\"Image\\\" style=\\\"width: 250px\\\">\\n                        </div>\\n                    </div>\\n                </div> \\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\n            </form>\\n            </app-card>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UpdateUserComponent } from './update-user.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UpdateUserComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UpdateUserRoutingModule { }\r\n","export default \".error-div {\\n  color: red;\\n  background-color: white; }\\n\\n#image-wrapper input {\\n  display: inline !important;\\n  max-width: auto; }\\n\\n#image-wrapper {\\n  text-align: center !important;\\n  margin: auto; }\\n\\n#profile-image {\\n  max-width: 250px !important;\\n  max-height: 250px !important; }\\n\\n#basic-info-heading {\\n  color: #3F4D67; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy94MjMvRG9jdW1lbnRzL0dpdEh1Yi9kYmMtYnVkc2JhbmstYW5ndWxhci9zcmMvYXBwL2RlbW8vdXNlci91cGRhdGUtdXNlci91cGRhdGUtdXNlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVM7RUFDVCx1QkFBdUIsRUFBQTs7QUFHM0I7RUFDSSwwQkFBMEI7RUFDMUIsZUFBZSxFQUFBOztBQUduQjtFQUNJLDZCQUE2QjtFQUM3QixZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksMkJBQTJCO0VBQzNCLDRCQUE0QixFQUFBOztBQUdoQztFQUNJLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RlbW8vdXNlci91cGRhdGUtdXNlci91cGRhdGUtdXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1kaXYge1xyXG4gICAgY29sb3I6cmVkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbiNpbWFnZS13cmFwcGVyIGlucHV0IHtcclxuICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50O1xyXG4gICAgbWF4LXdpZHRoOiBhdXRvO1xyXG59XHJcblxyXG4jaW1hZ2Utd3JhcHBlciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICAgIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuI3Byb2ZpbGUtaW1hZ2Uge1xyXG4gICAgbWF4LXdpZHRoOiAyNTBweCAhaW1wb3J0YW50O1xyXG4gICAgbWF4LWhlaWdodDogMjUwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuI2Jhc2ljLWluZm8taGVhZGluZyB7XHJcbiAgICBjb2xvcjogIzNGNEQ2NztcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from '../../../services/user/user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from '../../../../environments/environment';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.scss']\n})\n\nexport class UpdateUserComponent implements OnInit {\n\n  public userProfile        : any;\n  public imageName          : string;\n  public fileData           : File = null;\n  public previewUrl         : any = null;\n  public fileUploadProgress : string = null;\n  public uploadedFilePath   : string = null;\n  public uploadAPI          = `${environment.apiUrl}/user/update/image`;\n\n  \n  title = 'budsbankadminpanel';\n  public uploader: FileUploader = new FileUploader({\n    'url'           : this.uploadAPI,\n     itemAlias      : 'image',\n     allowedFileType: ['image']\n  });\n\n  updateUserForm = new FormGroup({\n    username    : new FormControl(''),\n    email       : new FormControl(''), \n    first_name  : new FormControl(''),\n    last_name   : new FormControl(''),\n    phone       : new FormControl(''),\n    image       : new FormControl(''),\n    user_id     : new FormControl('')\n  });\n\n  constructor(private formBuilder: FormBuilder, private user: UserService, private currentRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      console.log(item.file.name);\n    };\n\n    this.updateUserForm = this.formBuilder.group({\n      username    : ['', [Validators.required]],\n      email       : ['', [Validators.required, Validators.email]],\n      first_name  : ['', [Validators.required]],\n      last_name   : ['', [Validators.required]],\n      phone       : ['', [Validators.required]],\n      image       : [null],\n      user_id     : ['']\n    });\n\n    this.currentRoute.params.subscribe(params => {\n      this.user.getUserById(params.id).then(response => { \n        if (response['status'] === 200){\n          if (response['data'].length > 0){\n            this.userProfile = response['data'][0]; \n            this.updateUserForm.controls['username'].setValue(this.userProfile.username);\n            this.updateUserForm.controls['email'].setValue(this.userProfile.email);\n            this.updateUserForm.controls['first_name'].setValue(this.userProfile.first_name);\n            this.updateUserForm.controls['last_name'].setValue(this.userProfile.last_name);\n            this.updateUserForm.controls['phone'].setValue(this.userProfile.phone);\n            this.updateUserForm.controls['image'].setValue(this.userProfile.image); \n            this.updateUserForm.controls['user_id'].setValue(this.userProfile.id);\n          }\n        }else{\n          console.log(response);\n          swal.fire('Error', 'Auth Provider is not available', 'error');\n        }\n      });\n    });\n  }\n\n  get username(){\n    return this.updateUserForm.get('username');\n  }\n\n  get email(){\n    return this.updateUserForm.get('email');\n  }\n\n  get first_name(){\n    return this.updateUserForm.get('first_name');\n  }\n\n  get last_name(){\n    return this.updateUserForm.get('last_name');\n  }\n\n  get phone(){\n    return this.updateUserForm.get('phone');\n  }\n\n  get image(){\n    return this.updateUserForm.get('image');\n  }\n\n  get user_id(){\n    return this.updateUserForm.get('user_id');\n  }\n\n  fileProgress(fileInput: any) {\n    this.fileData = <File>fileInput.target.files[0];\n    this.preview();\n  }\n\n  preview() {\n    var mimeType = this.fileData.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n\n    var reader = new FileReader();      \n    reader.readAsDataURL(this.fileData); \n    reader.onload = (_event) => { \n      this.previewUrl = reader.result; \n    }\n  }\n\n  onUpdateUserSubmit(){ \n    if (!this.updateUserForm.invalid){\n      var data = this.updateUserForm.value;\n      data['user_id'] = this.userProfile.id; \n      this.user.update(data).then(updateResponse => { \n        if (updateResponse['status'] === 200){\n          if (this.fileData){ \n            this.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n              form.append('userId' , updateResponse['user'].id);\n            }\n            this.uploader.uploadAll();\n            this.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any): any => {\n              if(response){ \n                var formatedResponse = JSON.parse(response); \n                if (formatedResponse['status'] !== 200){\n                  swal.fire('Error', `${formatedResponse['message']}`, 'error');\n                }\n              }\n            }\n          }\n          swal.fire('Success', \"User Updated Successfully\", 'success');\n        }else{\n          swal.fire('Error', `${updateResponse['message']}`, 'error');\n        }\n      }); \n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UpdateUserComponent } from './update-user.component';\nimport { UpdateUserRoutingModule } from './update-user-routing.module';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { SharedModule } from '../../../theme/shared/shared.module';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\n\n@NgModule({\n  declarations: [UpdateUserComponent],\n  imports: [\n    CommonModule,\n    UpdateUserRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    FileUploadModule,\n    SweetAlert2Module\n  ]\n})\nexport class UpdateUserModule { }\n"],"sourceRoot":"webpack:///","file":"update-user-update-user-module-es5.js"}